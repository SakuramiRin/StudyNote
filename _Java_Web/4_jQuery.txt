js类库
  对常用的方法和对象进行封装，方便使用
  其他一些 JavaScript 框架包括：MooTools、Backbone、Sammy、Cappuccino、Knockout、JavaScript MVC、Google Web Toolkit、Google Closure、Ember、Batman 以及 Ext JS。
特性：
    HTML 元素选取
    HTML 元素操作
    CSS 操作
    HTML 事件函数
    JavaScript 特效和动画
    HTML DOM 遍历和修改
    AJAX
    Utilities

导入使用 <script src="jquery.js"></script> 必须在head中？ src中可以使用CDN

标准语法 $(selector).action()

  var $username=$("#");
    $(this) 当前对象
    $(" ") 所有该对象
    $(". ") 所有class
    $("# ") id
    参阅后面的选择器

解决其他框架中和含有$的方法 noConflict
  $.noConflict();--->可以创建简写var jq = $.noConflict();并将之后的jQuery全换成jq
  jQuery(document).ready(function(){ ----->或者在function()参数中传入$，并将jQuery全换成$
    jQuery("button").click(function(){
      jQuery("p").text("jQuery 仍在运行！");
    });
  });
================================================================
JQuery常用事件
    $(document).ready(function) 	将函数绑定到文档的就绪事件（当文档完成加载时）
      可简化？$(function(){...})
      js中只能出现加载一次onload方法，即window.onload=function(){}，而JQuery可以多次
    $(selector).click(function) 	触发或将函数绑定到被选元素的点击事件
    $(selector).dblclick(function) 	触发或将函数绑定到被选元素的双击事件
    $(selector).focus(function) 	触发或将函数绑定到被选元素的获得焦点事件
    $(selector).mouseover(function) 	触发或将函数绑定到被选元素的鼠标悬停事件

派发事件
  $("选择器").click(function(){...});
    等价于 dom.对象.onclick=function(){};
  focus
  blur
  submit
  change
  click
        $(function(){
          $("id值").click(function(){
            ...
          })
        });

===================================================================
jquery中的效果,所有效果之后继续调用的函数，都需要定义在效果函数里面，同时，同对象动画间的调用支持连.
  隐藏或展示
    show(毫秒数) hide(毫秒数) toggle()切换状态
  滑入滑出
    slideDown(毫秒) 向下
    slideUp();
    slideToggle()
  淡入淡出
    fadeIn(毫秒) 淡入
    fadeOut(毫秒)
    fadeToggle()
    fadeTo(speed,0~1) 其中speed可取值slow，fast或时间
  动画 (排序)
    animate({CSS样式},毫秒); 移动需要将元素的CSS position属性设置为 relative fixed 或absolute。css样式可以自加+= 。样式中可使用show,hide
  停止
    stop()
=======================================================
jQuery html 不适用与xml
DOM
  获取
    获取内容
      text()设置或返回所选元素的文本内容
      html()设置或返回所选元素的包含HTML标签的文本内容
      val()设置或返回表单字段的值
    获取属性
      attr()
  添加
      append()在被选元素的结尾插入内容
      prepend()在被选元素的开头插入内容
      after()在被选元素之后插入内容
      before()在被选元素之前插入内容
  删除
      remove()删除被选元素，包括子元素
      empty()删除被选元素的子元素
  dom对象和jQuery对象之间的转换。dom对象和jQuery对象的方法是不能混用的
    var $ =$(dom对象);  dom-->jQuery

    jQuery对象[index];  jQuery-->dom
    jquery对象.get(index);

CSS
  addClass()  向被选元素添加一个或多个类,相当于attr("class","")
  removeClass() 从被选元素删除一个或多个类
  toggleClass() 切换操作
  css() 设置或返回样式属性 注意不是style
    设置.css("键名");
    获取.css("键名":"值","":"");
  对css操作style属性
    css():获取或者设置css样式
      同attr方法

其他
  width()设置或返回元素的宽度（不包括内边距、边框或外边距）
  height()
  innerWidth()方法返回元素的宽度（包括内边距）
  innerHeight()
  outerWidth()方法返回元素的宽度（包括内边距和边框）
  outerHeight()
  文档和窗口尺寸通过选择器 $(document). 和$(window).

=======================================================

选择器总结,JQ使用了CSS选择器来选取元素
  基本选择器
    $("#id值")
    $(".class值")
    $("标签名")
    $("*")选择所有 多个选择器选取用,隔开
  层次选择器
    a b --->a选择器下的所有b
    a>b --->a选择器下的第一层b
    a+b ---->a选择器后的第一个b
    a~b ----->a选择器后所有的b
    -------------------------
    jQuery遍历  是否也属于选择器范畴？
      向上
        parent() 所有上一级，直接父类
        parents() 所有上级，所有父类
        parentsUntil() 到指定为止的上级
      向下
        children() 所有下一级，直接子类
        find() 所有下级，所有字子类
      同胞
        siblings() 被选元素的所有同级
        next()  被选元素的下一个同级
        nextAll() 被选元素的以下同级
        nextUntil() 到指定为止的以下同级
        prev()  被选上一个同级
        prevAll()
        prevUntil()
      -------------------
  基本过滤选择器
    :first 第一个
    :last 最后一个
    :odd 索引奇数
    :even 索引偶数
    :eq(index) 指定索引为 每个元素节点都有自己的索引，从开始
    :gt(index) 大于索引
    :lt(index) 小于索引
  内容过滤选择器
    :has("选择器") 包含指定选择器的元素
    filter(" ") 返回能匹配的元素
    not(" ") 返回不能匹配的元素
  可见性过滤选择器
    :hidden 在页面不展示元素 一般指的是input type="hidden" 和样式中display:none
    :visible
  属性过滤器
    [属性名] 有该属性的
    [属性名="值"] 不但有该属性且值满足的 $=表示以什么结尾
====================================================
AJAX 异步JavaScirpt和XML(Asynchronous JavaScript and XML)
  通过 jQuery AJAX 方法，您能够使用 HTTP Get 和 HTTP Post 从远程服务器上请求文本、HTML、XML 或 JSON,同时您能够把这些外部数据直接载入网页的被选元素中。

加载
  $(selector).load(URL,data,callback);
    URL中，还可以继续指定选择，比如id="p1"的元素 --->#p1
    可选data 参数规定与请求一同发送的查询字符串键/值对集合
    可选callback 参数是 load() 方法完成后所执行的函数名称

请求，用于通过 HTTP GET 或 POST 请求从服务器请求数据
  get 从指定的资源请求数据，基本上用于从服务器获得（取回）数据。注释：GET 方法可能返回缓存数据
    $.get(URL,callback);
    第一个参数是我们希望请求的 URL（"demo_test.asp"），第二个参数是回调函数。第一个回调参数存有被请求页面的内容，第二个回调参数存有请求的状态

  post 向指定的资源提交要处理的数据，也可用于从服务器获取数据。不过，POST 方法不会缓存数据，并且常用于连同请求一起发送数据
    $.post(URL,data,callback);
    第一个参数是我们希望请求的 URL ("demo_test_post.asp")，然后我们连同请求（name 和 city）一起发送数据，"demo_test_post.asp" 中的 ASP 脚本读取这些参数，对它们进行处理，然后返回结果，第三个参数是回调函数。第一个回调参数存有被请求页面的内容，而第二个参数存有请求的状态。

=======================================================

====================================================
 隔行换色
  $(function(){
    $("tr:gt(0):odd").css("background-color",""); //过滤0,
    $("tr:even").css
  });
====================================================
全选和全不选(内容中复选框的选中状态和复选框保持一致)
  <tr>
    <th><input type="checkbox" id="selectAll"></th>
  </tr>

  $(function(){
    $("#selectAll").click(function(){ //派发事件 //this在function中代表当前dom对象

    });
  });

=========================================================
以三种新元素追加文本的的方法
function appendText(){
  var txt1="<p>Text.</p>";              // 以 HTML 创建新元素
  var txt2=$("<p></p>").text("Text.");  // 以 jQuery 创建新元素
  var txt3=document.createElement("p");
  txt3.innerHTML="Text.";               // 通过 DOM 来创建文本
  $("body").append(txt1,txt2,txt3);        // 追加新元素
}
