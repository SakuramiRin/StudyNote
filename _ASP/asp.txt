ASP 指的是Active Server Pages 动态服务器页面
  一项微软技术，在IIS(Internet Information Services)中运行的程序,需要Windows NT 4.0,在ASP中，默认使用VBScript(大小写敏感)脚本，其他添加如Python需要安装脚本引擎

  ASP文件
    和HTML文件相似，包含文本、HTML、XML和脚本，在服务器上执行。扩展名.asp
    和HTML不同在于： 当浏览器请求某个 HTML 文件时，服务器会返回这个文件，而当浏览器请求某个 ASP 文件时，IIS 将这个请求传递至 ASP 引擎。ASP 引擎会逐行地读取这个文件，并执行文件中的脚本。最后，ASP 文件将以纯 HTML 的形式返回到浏览器。

  功能
    动态地编辑、改变或者添加页面的任何内容 --动态
    对由用户从 HTML 表单提交的查询或者数据作出响应
    访问数据或者数据库，并向浏览器返回结果
    为不同的用户定制网页，提高这些页面的可用性
    用 ASP 替代 CGI 和 Perl 的优势在于它的简易性和速度
    由于 ASP 代码无法从来浏览器端察看，ASP 确保了站点的安全性。
    优秀的 ASP 编程可将网络负载降至最低

标准写入
  <%response.write("")%>
  <%=" "%>

在ASP中使用JavaScript作为特定页面的默认脚本语言，需在页面顶端插入
  <%@ language="javascript"%>

VBScript变量声明
  dim 变量名(数组个数)
  如需声明供多个 ASP 文件使用的变量，请将变量声明为 session 变量或者 application 变量
  ================
  Session 变量
    Session 变量用于存储单一用户的信息，并且对一个应用程序中的所有页面均有效。存储于 session 中的典型数据是姓名、id 或参数。
      Session 开始于：
        当某个新用户请求了一个 ASP 文件，并且 Global.asa 文件引用了 Session_OnStart 子程序时；
        当某个值存储在 Session 变量中时；
        当某个用户请求了一个 ASP 文件，并且 Global.asa 使用 <object> 标签通过 session 的 scope 来例示某个对象时；
      Session 结束
        默认20分钟，可手动设置<%Session.Timeout=5%>，立即结束使用Session.abndon
      Session 移出
        Session.Contents.Remove("变量")
        Session.Contents.RemoveAll()
      Session 遍历，count属性可用于计数
        dim i
        For Each i in Session.Contents
        Response.Write(i & "<br />")
        Next
        遍历StaticObjects集合，查看session对象中所有对象的值
        dim i
        For Each i in Session.StaticObjects
        Response.Write(i & "<br />")
        Next

  Application 变量
    Application 变量同样对一个应用程序中的所有页面均有效。Application 变量用于存储一个特定的应用程序中所有用户的信息。所用用户分享一个Application对象，而session对象则是一对一的关系
      创建
        <script language="vbscript" runat="server">
          Sub Application_OnStart
          application("变量")="值"
          application("变量")=值
          End Sub
        </script>
      存储取回访问
        <% Response.Write(Application("users")) %>
      遍历Contents集合，count属性可用于计数，遍历StaticObjects形式相同
        <% dim i
          For Each i in Application.Contents 和Session形同
          Response.Write(i & "<br />")
          Next %>
      锁定与解锁
        <% Application.Lock
          Application.Unlock %>

循环
  调用时，需要&变量名--->等同于+
  循环使用
    For i = 0 to 5
    Next

程序调用问题
  当从一个用 VBScript 编写的 ASP 文件中调用 VBScript 或者 JavaScript 子程序时，可以使用关键词 "call"，后面跟着子程序名称。假如子程序需要参数，当使用关键词 "call" 时必须使用括号包围参数。假如省略 "call"，参数则不必由括号包围。假如子程序没有参数，那么括号则是可选项。

  当从一个用 JavaScript 编写的 ASP 文件中调用 VBScript 或者 JavaScript 子程序时，必须在子程序名后使用括号。
===========================================================

问候时间 JS
    <%@ language="javascript" %>
    <html>
    <body>
    <%
    var d=new Date()
    var h=d.getHours()

    Response.Write("<p>")
    Response.Write(d + " (Beijing Time)")
    Response.Write("</p>")
    if (h<12)
       {
       Response.Write("Good Morning!")
       }
    else
       {
       Response.Write("Good day!")
       }
    %>
    </body>
    </html>

使用JavaScript的子程序
  <%@ language="javascript" %>
  <html>
    <head>
    <%
      function jsproc(num1,num2){
        Response.Write(num1*num2)
      }
    %>
    </head>

    <body>
      <p>
        结果：<%jsproc(3,4)%>
      </p>
    </body>
  </html>
===========================================================

ASP表单
   VB 对get，post表单的获取
    <html>
      <body>
        <form action="/example/aspe/demo_aspe_reqquery.asp" method="get" 或"post">
        您的姓名：<input type="text" name="fname" size="20" />
          <input type="submit" value="提交" />
        </form>
      <%
        dim fname 定义变量
        fname=Request.QueryString("fname")  通过get搜集的值
        fname=Request.Form("frame") 通过post获得的数据
        If fname<>"" Then <>是不等于
            Response.Write("你好！" & fname & "！<br />")
            Response.Write("今天过得怎么样？")
        End If
      %>
      </body>
    </html>

    单选按钮
    <%
    dim cars
    cars=Request.Form("cars")
    %>

    <input type="radio" name="cars"
    <%if cars="Volvo" then Response.Write("checked")%>
    value="Volvo">Volvo</input>
    <br />


    <%
    if cars<>"" then
    Response.Write("<p>您喜欢的汽车是" & cars & "</p>")
    end if
    %>
===========================================================
ASP cookie
  "Response.Cookies" 命令用于创建 cookie，该命令必须位于<html>标签之前
  多值集合，被称为cookie拥有键
  <%
  Response.Cookies("键名集")("键")="值"
  Response.Cookies("firstname").Expires=#May 10,2020# 失效时间，为cookie属性
  %>

  读取所有cookie
  <%
    dim x,y
    for each x in Request.Cookies 遍历
      response.write("<p>")
      if Request.Cookies(x).HasKeys then 如果集合键名内有下个键
        for each y in Request.Cookies(x)  遍历集合键名，即user
          response.write(x & ":" & y & "=" & Request.Cookies(x)(y))  输出集合键名:键=值
          response.write("<br />")
        next
      else
        Response.Write(x & "=" & Request.Cookies(x) & "<br />")  输出键值
      end if
      response.write "</p>"
    next
  %>

  ===========================================================
ASP 文件引用
  通过使用 #include 指令，我们可以在服务器执行 ASP 文件之前，把另一个ASP文件插入这个文件中。#include 命令用于在多个页面上创建需要重复使用的函数、页眉、页脚或者其他元素等。
