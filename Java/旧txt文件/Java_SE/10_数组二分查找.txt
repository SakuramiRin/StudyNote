二分法查找：
  public static void halfSearch(int[] arr,int key){
    int max,min,mid;
    min = 0;
    max = arr.length-1;
    mid = (max+min)/2;

    while(arr[mid]!=key){
      if(key>arr[mid]){
        min = mid + 1;
      }
      else{
        max = mid - 1;
      }
      if(min>max)
        return -1;
      mid = (max+min)/2;
    }

    return mid;
  }

----------------------------------------------------
  public static int halfSearch_2(int[] arr,int key)
  	{
  		int min = 0,max = arr.length-1,mid;

  		while(min<=max)
  		{
  			mid = (max+min)>>1;

  			if(key>arr[mid])
  				min = mid + 1;
  			else if(key<arr[mid])
  				max = mid - 1;
  			else
  				return mid;
  		}
  		return -1;
  	}


--------------------------------------------------
十进制转换成二进制的手动代码
public static void toBin(int num){
  StringBuffer sb = new StringBuffer();

  while(num>0){
    sb.append(num%2);
    num = num / 2;
  }

  System.out.println(sb.reverse());
}
