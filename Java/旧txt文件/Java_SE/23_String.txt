String 对象属于API(应用程序接口)
  String 是fianl类，不能有子类去复写

  字符串是一个特殊的对象，它最大的特点就是，一旦被初始化就不可以被改变
  同时，String复写了equals方法，使他们不再比较String对象的地址值，而是内容

  String s = new String();
  String s =""
  两者使用上等同，区别在于s在内存中的对象为1个 2个

  String s = "..." s是一个字符串类型的变量，"abc"是一个对象

----------------------------------------------------------
方法：
  获取：
    字符串中包含的字符数，也就是字符串的长度
      int length()
    获取某个位置上的字符
      char charAt(int index)
    根据字符获取该字符的位置
      int indexOf(int ch):返回的是ch在字符串中第一次出现的位置，没有就返回-1
      int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
      int indexOf(String str)
      int indexOf(String str, int fromIndex)
      int lastIndexOf(int ch)


  判断：
    字符串中是否包含某一个子串。
		  boolean contains(str):
		  特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该str不在字符串中存在。
			所以，也可以用于对指定判断是否包含。
			if(str.indexOf("_")!=-1)，该方法即可以判断，有可以获取出现的位置。
	  字符中是否有内容。
		  boolean isEmpty(): 原理就是判断长度是否为0，和"" null 不同，""是一个对象 null 是指向空，且该方法1.6开始
	  字符串是否是以指定内容开头。
		  boolean startsWith(str);
	  字符串是否是以指定内容结尾。
		  boolean endsWith(str);
	  判断字符串内容是否相同。复写了Object类中的equals方法。
		  boolean equals(str);
	  判断内容是否相同，并忽略大小写。
		  boolean equalsIgnoreCase();

  转换
	 将字符数组转成字符串。
		构造函数：String(char[])
		  String(char[],offset,count):将字符数组中的一部分转成字符串。起始位置，个数
		静态方法：
		  static String copyValueOf(char[]);
			static String copyValueOf(char[] data, int offset, int count)
			static String valueOf(char[]):
	 将字符串转成字符数组 **
		  char[] toCharArray():
	 将字节数组转成字符串
			String(byte[])
			String(byte[],offset,count):将字节数组中的一部分转成字符串
   将字符串转成字节数组。
			byte[]  getBytes():
	 将基本数据类型转成字符串。
		  static String valueOf(int)
	  	static String valueOf(double)
	  	//3+"";//String.valueOf(3);
		特殊：字符串和字节数组在转换过程中，是可以指定编码表的

 替换
	    String replace(oldchar,newchar);

 切割
	    String[] split(regex);

 子串。获取字符串中的一部分
	    String substring(begin); 从指定位置开始到结尾
	    String substring(begin,end); 含头不含尾

转换，去除空格，比较
	将字符串转成大写或则小写
	 	 String toUpperCase();
	 	 String toLowerCase();
  将字符串两端的多个空格去除 ***
	 	 String trim();
  对两个字符串进行自然顺序的比较
	 	 int compareTo(string);


------------------------------------------------
StringBuffer StringBuilder 1.5
  String 初始化后是不能修改的，但StringBuffer作为一个容器，是字符串缓冲区，是可以被修改的

  特点：长度可变，可操多个数据类型 最终动过toString方法变为字符串

  同样具有数据库中的存储、删除、获取、修改|CURD creat update read delete
    存储： append()  将指定数据作为参数添加到已有数据的结尾处
          insert(index __) offset为其实坐标 可以将数据插入到指定index

    删除：delete(start end) 含头不含尾  ---->清空 .delete(0, .length())
        deleteCharAt

    获取：charAt() indexOf() 根据字符串获取位置 lastIndexOf() substring(start end)

    修改: replace(start end content)
          setCharAt(index content)
            反转：reverse()

      void getChars(start end dst目标字符数组 dstBegin 从目标字符数组的几号角标开始):将缓冲区中指定数据存储到指定数组中
