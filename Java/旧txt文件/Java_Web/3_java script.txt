JavaScript
  特点：直译式脚本语言，动态类型，弱类型(变量声明的时候不需要声明的)，基于原型的语言，事件驱动语言，解释语言(自上而下解析)，对大小写敏感,面向对象，基于 prototype，而不是基于类的。
  作用：修改html页面的内容，修改样式，完成表单验证

  组成部分：
    ECMAScript：js基础语法和核心
    BOM：浏览器对象模型
    DOM：文档对象模型


  嵌入方式
    1.在页面上直接写入，一般是head标签
      <script type="text/javascript"></script>
    2.通过script标签的src属性导入
      <script type="text/javascript" src=""></script>

  数据类型
    原始类型5种：null(返回为object) String(属于伪，栈中存的是堆地址值) number(所有数字均为64位8比特) boolean undefined未初始化 (可通过typeof判断)  存储于栈中
    引用类型：又被称作类 通过new  存储于堆中
    注意，null类型的typeof是Object原本属于错误
    类型转换：toString parseInt parseFloat

  =========================================================

  JS函数
    定义格式：
    1.    function 函数名(形式参数){
          函数体;
        }
      不声明返回值类型，参数不需要加类型
    2.    var 函数名=function(形参){
      函数体;
    }该一旦使用了src属性,那么script标签体中的js代码将不再执行
    js函数也存在trycatch语句

  js中有for in 语句，如同foreach
  for (新临时变量 in 哪个对象中){
    要执行的代码
  }

  js事件和函数的绑定：
    1.通过标签的事件属性 <xxx onclick="函数名(参数)"></xxx>
    2.通过给元素派发事件 document.getElementById("id值").onclick=function(参数){}
    3.=~2 document.getElementById("id值").onclick=函数名;
     2和3方式必须放在页面下面，或者在页面加载成功后执行 init();

============================================================
  js事件 JS HTML DOM 参阅HTML DOM Event对象
    DOM对象
      常用属性
        innerHTML - 获取和设置节点（元素）的文本值,注意：不要在文档加载完成后使用
        parentNode - 节点（元素）的父节点
        childNodes - 节点（元素）的子节点
        attributes - 节点（元素）的属性节点 document.getElementById(id).attribute=new value 改变元素属性
        style 设置和获取节点的样式--->DOM CSS
      常用方法：参照节点
        设置获取节点的value属性
          dom 对象.value; 获取
          dom 对象.value=""; 设置

    DOM CSS
      document.getElementById(id).style.样式名=new style 改变html元素的样式  特别的.style.visibility="hidden" 可以隐藏元素
        // 对于htmldom的操作文档增删改查操作请参阅xml dom的文档，appendChild(dom 对象)：在一个元素下添加孩子//基本用不上


    DOM 事件--->事件属性调用，即onlick="函数()"  ||js分配 d.gebi("").onclick=function(){需要调用的函数名};
      焦点事件：onfocus onblur
      表单事件：onsubmit onchange 改变---->常对输入字段进行验证
        加在form表单上的 onsubmit = "return 函数名()" 函数返回为Boolean类型,注意return
      页面加载事件： onload页面加载成功事件---><body onload=""> onbeforunload退出 onunload
        window.onload=function(){//该方式也可以调用页面加载成功事件，同时，window可以省略}
      鼠标事件： onclick单机 ondblclick双击 onmousedown按下 onmouserup弹起 onmousemove移进 onmouserover悬停 onmouserout移出
      键盘事件：onkeydown按下 onkeyup弹起 onkeypress按住
      event.stopProppagation();阻止传播事件


    DOM 元素(节点)：浏览器接收到html代码时，会将所有代码装载到内存中，形成一棵树(document树)
      节点(Node)
        文档节点 document 最顶端
        元素节点 element  标签
        属性节点 attribute  标签属性
        文本节点 text 标签包围内容

      获取节点 document
        获取元素:document.
        getElementById("id值"); //获取一个特定元素
        getElementsByTagName("标签名") //通过标签名获取一种元素，返回一个数组，该数组可调用length变量
        getElementsByClassName("Class属性的值");//通过Class属性获取一类元素
        getElementsByName("name属性");//通过name属性获取一类元素

      创建节点
        createAttribute() 创建属性节点
        createElement() 创建元素节点
        createTextNode() 创建文本节点
        insertBefore()  在指定子节点前面插入新的
      创建子节点
        appendChild()
      删除子节点
        removeChild()
      替换子节点
        replaceChild()
      获取
        getAttribute() 获取指定属性值
      设置
        setAttribute()  设置属性值


===========================================================
JS对象
  变量声明
    var 变量名 = 初始化值;
    var 变量名;
      变量名 = 赋值;
    var不建议省略，分号不省略

    对象有属性与方法
      属性设置
      var 变量名 = {
        属性名:属性值,
      }；
      对对象属性的寻址方式有两种：  变量=对象.属性名; 变量=对象["属性名"]
      方法 .()
    对象也可以由函数来构造，形式如同java构造函数，之后再new对象的时候传参

    String对象
      原始类型的String是一个伪对象可以直接调用String类对象的方法
      比如，substring(0,endIndex);
    运算符：
      注意==和===的区别
        ===还会判断两个比较对象是否为同一对象

  引用类型总结：
  原始类型中的String Number Boolean都是伪对象,可以调用相应的方法
    Array:数组
      常用属性：length
      常用方法
        toString()
        存放值：对内容操作
          pop(); 弹 删除并返回最后一个元素  shift(); 删除并返回数组中的第一个元素
          push();插入 末尾添加一个元素，并返回新长度  unshifu();插入到首位
        打印数组：
          join(分隔符)；将数组里的元素放入一个字符串中，添加指定的分隔符
        拼接数组：
          concat(); 连接两个或者更多的数组，并且返回
        对结构操作：
          sort();持续化操作
          reverse(); 反转
    String:
        new String(值|变量);//返回一个对象
        String(值|变量);//返回原始类型
      常用属性:length
      常用方法:
        substring(start,end):[start,end)
        substr(start,size):从索引为指定的值开始向后截取几个
        charAt(index):返回在指定位置的字符。
        indexOf(""):返回字符串所在索引 lastIndexOf
        search()  检索与正则表达式相匹配的值
        replace():替换与正则表达式匹配的子串
        split():切割
        slice() 提取片段
    Boolean:
      语法:
        new Boolean(值|变量);
        Boolean(值|变量);
        非0数字 非空字符串 非空对象 转成true
    Number
      语法:
        new Number(值|变量);
        Number(值|变量);
      属性：
        MAX VALUE 可表最大数 MIN VALUE
        NEGATIVE INFINITIVE 负无穷大 POSITIVE INFINITIVE 正无穷大
        NaN 非数字值
      方法：
        toExponential() 转字符串
        toFixed()   转字符串
        toPrecision() 格式化为指定长度
        toString()
        valueOf() 返回一个number对象的基本数字值
      注意:
        null====>0
        fale====>0 true====>1
        字符串的数字=====>对应的数字
        其他的NaN
    Date: 注意，月份从0角标开始
      new Date();
      常用方法:
        toLocalString()
        getTime() 返回调和时间的毫秒 getDay()
        setFullYear() setDate()
    Math:
      Math.常量|方法
      Math.PI
      Math.random()  [0,1)
      查表
    RegExp:正则表达式
      语法:
        直接量语法  /正则表达式/参数
        直接量语法  /正则表达式/

        new RegExp("正则表达式")
        new RegExp("正则表达式","参数")
        参数:
          i:忽略大小写
          g:全局
        常用方法:
          test() 检索字符串中的指定值，返回值为boolean
          exec() 检索字符串中的指定值。返回值是被找到的值。没有，返回 null

    全局:
      ★
      decodeURI() 解码某个编码的 URI。
      encodeURI() 把字符串编码为 URI。

      Number():强制转换成数字
      String():转成字符串

      parseInt():尝试转换成整数
      parseFloat():尝试转换成小数

      eval() 计算 JavaScript 字符串，并把它作为脚本代码来执行。


===========================================================
JavaScript Window --->bom(浏览器对象模型)browser object model
    所有的浏览器都有5个对象
    window 窗口对象 同时，如果文档内包含框架(frame iframe)，浏览器会为html文档创建一个对象，并未每一个框架创建一个额外的window对象
    window的常用属性中，可以获取其他4个对象window可省略.location

      window   窗口
        方法：
          确定浏览器尺寸 请查表
          打开和关闭
            .open(url)
            .close()
          移动调整
            .moveTo()
            .resizeTo()
        消息框
          alert("");警告框
          confirm("")确定框 返回Boolean
          prompt("")输入框
        定时器
          var id=setInterval(code,毫秒数):每隔指定的毫秒数执行一次函数 周期
            //code为函数名，不加()  或"code" ，加()
          var id=setTimeout(code,毫秒):延迟指定的毫秒数后，只执行一次函数
          清除定时器：clearInterval(id);clearTimeout(id);
        Cookie

      location  地址栏
        属性：href：获取或者设置当前页面的url
          location.href;
          location.href="..." 相当于a标签
        方法：location.assign() 方法加载新的文档

      history 历史访问的url
        方法
          back(); 后退
          forward(); 前进
          go(int); 前进后退多少次
      //navigator 包含浏览器有关信息
      //screen 屏幕 screen.availWidth - 可用的屏幕宽度 screen.availHeight - 可用的屏幕高度

============================================================

















=============================================================
图片轮换
<script>
  function changeImage(){
    element = document.getElementById("myimage");
    if(element.src.match("图片名")){
      element.src="";
    }
    else {
      element.src="";
    }
  }
</script>
============================================================

表单校验---->升级，追加在文本框后面--->文本框失去焦点的时候onblur
<body>
  <form action="#" method="get" onsubmit="return checkForm()">
    用户名:<input name="username" id="username" value="" onfocus="getFocus()" onblur="loseFoucus()"/><span id="spanid"></span><br/>
    密码:<input type="password" name="password" id="password"/><br/>
    <input type="submit" value="提交"/>
    <input type="reset"/>
  </form>
</body
<style>
  function checkForm(){
      var usernameObj=document.getElementById("username");
      var usrename=usernameObj.value;
      if(username==null||username==""){
          alert("用户名不能为空");
          return false;
      }
      var pwdObj=document.getElementById("password");
      var pwdValue=psdObj.value;
      if(pwdValue==null||pwdValue==""){
        alert("密码不能为空");
        //var user=document.getElementById("username");
        //document.getElementById("spanid").innerHTML=user.value;
        return false;
      }
      return ture;
  }
  function getFocus(){
    var user=document.getElementById("username");
    document.getElementById("spanid").innerHTML=user.value;
  }
  function loseFoucus(){
    var user=document.getElementById("username");
    document.getElementById("spanid").innerHTML=user.value;
  }
</style>


w3标准
    function validate_required(field,alerttxt){
      with (field){
      if (value==null||value=="")
        {alert(alerttxt);return false}
      else {return true}
      }
    }
    function validate_form(thisform){
      with (thisform){
      if (validate_required(email,"Email must be filled out!")==false)
        {email.focus();return false}
      }
    }

=========================================================

轮写文字
<body onload="init()" id="bo"><div id="divId"></div></body>

<script>
  var s = "轮写一些文字";
  var i = 0;
  var bodyObj;
  function init(){
    // document.write(s);
    divObj=document.getElementById("divId");
    setInterval(show,200);
  }
  function show(){
    i++;
    var_s=s.substring(0,i);
    divObj.innerHTML=s_;
    if(i==s.length){
        i=0;
    }
  }
</script>


==================================================
图片轮播
  <body onload="init()" id="bo"><img id="lunbo" src=" "></div></body>

  <script>
    var i=1;
    function init(){
      setInterval(changeImage,3000);
    }
    function changeImage(){
      var imgObj=document.getElementById("lunbo")
      i++;
      imgObj.src="../"+i+"";
      if(i=3){
        i=0;
      }
    }
  </script>

===================================================
定时弹出广告3次
  var i=0;//定时器
  var timer;//次数
  onload = function(){
    timer=setInterval(showAd,4000);
  }
  function showAd(){
    i++;
    if(i==3){
      clearInterval(timer);
    }
    var divObj=document.getElementById("ad");
    divObj.style.display="block";
    setTimeout(hideAd,2000);
  }
  function hideAd(){
    var divObj=document.getElementById("ad");
    divObj.style.display="none";
  }

  =====================================================
  隔行换色
    onload=function(){//页面加载成功
      var arr=document.getElementsByTagName("tr");//获取所有tr
      for(var i=0;i<arr.length;i++){
        if(i%2==0){
          arr[i].style.backgroundColor="";
        }else{
          ...
        }
      }
    }
==========================================================
全选与全不选
  <th><input type="checkbox" onclick="selectAll(this)"/></th>

  <script>
    function selectAll(obj){
      var flag = obj.checked;//获取当前复选框的选中状态
      var arr=document.getElementsByClassName("itemSelect");//获取所有的复选框
      for(var i=0;i<arr.length;i++){
        arr[i].checked=flag;
      }//能用foreach吗
    }
  </script>

  ===============================================================
  左右选中
  ===============================================================
  省市选择(js数组长度可变，相当于list，数组可以存放任意值)
      <script>
        var arr = new Array(4);
        arr[0] = new Array("","","","")//定义二维数组：
        arr[1] = new Array("","","","")//定义二维数组：
        arr[2] = new Array("","","","")//定义二维数组：
        arr[3] = new Array("","","","")//定义二维数组：
      </script>
      <script>
        function selCity(index){
          var cities = arr[index];
          citySelObj.innerHTML="<option>"+初始化+"</>"
          for(var i=0;i<cities.length;i++){
            citySelObj.innerHTML+=("<option>"+cities[i]+"<>");
          }
        }
      </script>
=================================================================
cookie方法
  <script type="text/javascript">
  function getCookie(c_name) {
  if (document.cookie.length>0){
    c_start=document.cookie.indexOf(c_name + "=")
    if (c_start!=-1){
      c_start=c_start + c_name.length+1
      c_end=document.cookie.indexOf(";",c_start)
      if (c_end==-1) c_end=document.cookie.length
      return unescape(document.cookie.substring(c_start,c_end))
      }
    }
  return ""
  }

  function setCookie(c_name,value,expiredays){
  var exdate=new Date()
  exdate.setDate(exdate.getDate()+expiredays)
  document.cookie=c_name+ "=" +escape(value)+
  ((expiredays==null) ? "" : ";expires="+exdate.toGMTString())
  }

  function checkCookie(){
  username=getCookie('username')
  if (username!=null && username!="")
    {alert('Welcome again '+username+'!')}
  else {
    username=prompt('Please enter your name:',"")
    if (username!=null && username!=""){
      setCookie('username',username,365)
      }
    }
  }
  </script>

  <body onLoad="checkCookie()">
