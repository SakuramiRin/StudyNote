三大框架SSH
  Struts Spring hibernate(对JDBC封装)
三大框架SSM
  SpringMvc Spring mybat(对JDBC封装)

浏览器---服务器----数据库
  html展示 css渲染 js动画 jQuery  bootstrap响应式页面
  dbutils jdbc
  tomcat servlet(动态的技术，生成动态的内容) request response jsp/el/jstl (就是servlet )

  jdbc加强
  ajax加强 异步加强

  dhtml 动态html
    DHTML 动态html，只是一个术语
      DHTML意味着HTML 4.0、样式表以及 JavaScript 的结合物

      HTML4.0：文档表现从结构中分离
      层叠样式表CSS：得到一种用于HTML文档的样式和布局模型，能同时控制多个网页样式和布局
      文档对象(DOM)：一个中立于语言和平台的接口，它允许程序和脚本动态地访问和更新文档的内容、结构以及样式
      JavaScript：使您有能力编写可控制所有 HTML 元素的代码

  E4X
    对JavaScript新扩展，向JavaScript添加了对XML的直接支持，是正式的JavaScript标准
    JavaScript = ECMAScript
    E4X = JavaScript for XML 支持xml的JavaScript
    XML 作为 JavaScript 的对象，不再需要使用xml解析器

    语法：
      var name = new XML(StringName) 将xml文档以字符串形式存储在StringName助攻

      var name = new XML()
      name = XML文本
    调用：
      document.write(name.调用的标签名)
=============================================
HTTP最的两种请求方式：get 和 post
  最常见的HTTP方法，是两种 HTTP 请求方法
  注意理解：！
  GET - 从指定的资源请求数据。
  POST - 向指定的资源提交要被处理的数据


超文本传输协议（HTTP）的设计目的是保证客户机与服务器之间的通信。
HTTP 的工作方式是客户机与服务器之间的请求-应答协议。
web 浏览器可能是客户端，而计算机上的网络应用程序也可能作为服务器端。
举例：客户端（浏览器）向服务器提交 HTTP 请求；服务器向客户端返回响应。响应包含关于请求的状态信息以及可能被请求的内容

GET 方法
  注意，查询字符串（名称/值对）是在 GET 请求的 URL 中发送的：
  /test/demo_form.asp?name1=value1&name2=value2
    GET 请求可被缓存
    GET 请求保留在浏览器历史记录中
    GET 请求可被收藏为书签
    GET 请求不应在处理敏感数据时使用
    GET 请求有长度限制
    GET 请求只应当用于取回数据

POST 方法

请注意，查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的：

POST /test/demo_form.asp HTTP/1.1
Host: w3schools.com
name1=value1&name2=value2

    POST 请求不会被缓存
    POST 请求不会保留在浏览器历史记录中
    POST 不能被收藏为书签
    POST 请求对数据长度没有要求

比较 GET 与 POST

下面的表格比较了两种 HTTP 方法：GET 和 POST。
  	           GET                   	POST
后退按钮/刷新 	无害 	数据会被重新提交（浏览器应该告知用户数据会被重新提交）。
书签 	    可收藏为书签 	            不可收藏为书签
缓存        	能被缓存               	不能缓存
编码类型 	application/x-www-form-urlencoded 	application/x-www-form-urlencoded 或 multipart/form-data。为二进制数据使用多重编码。
历史 	  参数保留在浏览器历史中      参数不会保存在浏览器历史中
数据长度限制 	（URL 的最大长度是 2048 个字符） 	无限制。
数据类型限制 	只允许 ASCII 字符 	没有限制。也允许二进制数据。
安全性 	因为所发送的数据是 URL 的一部分，安全性差，在发送密码或其他敏感信息时绝不要使用 GET ！
参数不会被保存在浏览器历史或 web 服务器日志中。安全性好
可见性 	数据在 URL 中对所有人都是可见的。 	数据不会显示在 URL 中



其他 HTTP 请求方法
方法 	描述
HEAD 	与 GET 相同，但只返回 HTTP 报头，不返回文档主体。
PUT 	上传指定的 URI 表示。
DELETE 	删除指定资源。
OPTIONS 	返回服务器支持的 HTTP 方法。
CONNECT 	把请求连接转换到透明的 TCP/IP 通道。
