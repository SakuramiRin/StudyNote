Properties
  hashTable的子类，具备map集合的特点，它存储的键值都是字符串

  Properties是集合中和IO技术相结合的集合容器。

  特点：
    可以用于键值对形式的配置文件。

  .load()方法可以从流中加载键值对信息

  ----------------------------------
  应用：
  存储
    Properties prop = new Properties();
    prop.setProperty("","");

    Set<String> names = prop.stringPropertyNames();
    for(String s : names){}
    ---
    //演示，如何将流中的数据存储到集合中
  	//想要将info.txt中键值数据存到集合中进行操作
  	/*
  		1,用一个流和info.txt文件关联
  		2，读取一行数据，将该行数据用"="进行切割
  		3，等号左边作为键，右边作为值。存入到Properties集合中即可
  	*/
  	public static void method_1()throws IOException{
  		BufferedReader bufr = new BufferedReader(new FileReader("info.txt"));
  		String line = null;
  		Properties prop = new Properties();
  		while((line=bufr.readLine())!=null){
  			String[] arr = line.split("=");
  			///System.out.println(arr[0]+"...."+arr[1]);
  			prop.setProperty(arr[0],arr[1]);
  		}
  		bufr.close();
  		System.out.println(prop);
  	}

    ------------------------
    记录应用程序运行次数
      如果使用次数已经达到，那么就给出注册提示
      不能使用计数器,内存数据会消逝
      所以需要使用配置文件---->map 集合
      数据以文件形式存储，使用IO技术
      map+IO = Properties

  class RunCout{
    public static void main(String[] args)throws IOException{
      Properties prop = new Properties();
      File file = new File("count.Properties或者.ini")  将文件封装成对象
      if(!file.exists())
        file.creatNewFile();
      FileInputStream fis = new FileInputStream(file);

      prop.load(fis); 将流中的数据加载到集合当中

      String value = prop.getProperty("键");
      if(value != null)
        count = Integer.parseInt(value);
          if(count<几次){syso();return;}
      count++;
      prop.setProperty("键",count+"");

      FileOutputStream fos = new FileOutputStream(fis);
      prop.store(fos,"");

      fos.close();
      fis.close();

    }
  }
